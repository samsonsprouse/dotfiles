# improve colors
set -g default-terminal 'screen-256color'

# act like vim
setw -g mode-keys vi
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
unbind-key M-1      ; bind -n M-1   select-window -t 1
unbind-key M-2      ; bind -n M-2   select-window -t 2
unbind-key M-3      ; bind -n M-3   select-window -t 3
unbind-key M-4      ; bind -n M-4   select-window -t 4
unbind-key M-5      ; bind -n M-5   select-window -t 5
unbind-key M-6      ; bind -n M-6   select-window -t 6
unbind-key M-7      ; bind -n M-7   select-window -t 7
unbind-key M-8      ; bind -n M-8   select-window -t 8
unbind-key M-9      ; bind -n M-9   select-window -t 9
unbind-key M-0      ; bind -n M-0   select-window -t 10

# act like GNU screen
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

set-option -g status-position top

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# List of plugins
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'
set -g @plugin 'tmux-plugins/tpm' # Tmux package manager
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open' # Open highlighted selection directly from Tmux
# set -g @plugin 'tmux-plugins/tmux-resurrect' # Restore previous sessions on reboot
set -g @plugin 'tmux-plugins/tmux-continuum' # Restore previous sessions on reboot
set -g @plugin 'tmux-plugins/tmux-battery' #Show battery icon/status

#Allow mouse usage
set-option -g mouse on
set -g mode-mouse on
setw -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Shift + arrows to resize pane
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#vi style selection and copying to clipboard
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

#copy paste to clipboard
#set-option -g default-command "reattach-to-user-namespace -l zsh" # or bash...
#bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
#bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"


# Bindings to split open new panes
bind-key h split-window -v -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

# Binding to make a new window
bind-key c new-window -c '#{pane_current_path}'

bind-key k confirm kill-window

# Get the current session name and kill it
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Kill panes other than the current pane
bind-key o run-shell 'tmux kill-pane -a'

# Requires function restart_rails to be defined, which is sourced by in by .bashrc
# Opens bottom split, restarts rails, closes when done
bind-key r split-window -v -p 10 "source ~/.bashrc && restart_rails"

# Reloads tmux config file from default location and displays a message
bind-key R source-file ~/.tmux.conf

# Tmux will auto-start on system boot
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '5'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session' #for Neo Vim

# Initializes Tmux plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'

if-shell "test -f ~/.tmux_statusline.conf" "source-file ~/.tmux_statusline.conf"

# switch windows ctrl+number
# unbind-key 1        ; bind-key 1        select-window -t 1
# unbind-key 2        ; bind-key 2        select-window -t 2
# unbind-key 3        ; bind-key 3        select-window -t 3
# unbind-key 4        ; bind-key 4        select-window -t 4
# unbind-key 5        ; bind-key 5        select-window -t 5
# unbind-key 6        ; bind-key 6        select-window -t 6
# unbind-key 7        ; bind-key 7        select-window -t 7
# unbind-key 8        ; bind-key 8        select-window -t 8
# unbind-key 9        ; bind-key 9        select-window -t 9
# unbind-key 0        ; bind-key 0        select-window -t 10
unbind-key M-1      ; bind -n C-1   select-window -t 1
unbind-key M-2      ; bind -n C-2   select-window -t 2
unbind-key M-3      ; bind -n C-3   select-window -t 3
unbind-key M-4      ; bind -n C-4   select-window -t 4
unbind-key M-5      ; bind -n C-5   select-window -t 5
unbind-key M-6      ; bind -n C-6   select-window -t 6
unbind-key M-7      ; bind -n C-7   select-window -t 7
unbind-key M-8      ; bind -n C-8   select-window -t 8
unbind-key M-9      ; bind -n C-9   select-window -t 9
unbind-key M-0      ; bind -n C-0   select-window -t 10

whenwelose carve secretbase intoblackforest makemanyhalberds
